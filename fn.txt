
foundsum([], 0).
foundsum([H | T], Sum):-
    foundsum(T, Tailsum),
    Sum is Tailsum + H.

foundsum([4,7,3,2], Sum).



foundlength([],0).
foundlength([_ | T], Length):-
    foundlength(T, Lengthtail),
    Length is  Lengthtail + 1.

foundlength([4,7,3,2], Length).



foundele([X | _], 1, X).
foundele([_ | T], N, X):-
    N &gt; 1,
    N1 is N -1,
    foundele( T, N1, X).

foundele( [4,7,5,3,2], 3, X).



foundindex([X | _], X, 1).
foundindex([_ | T], X, Index):-
    foundindex(T, X, Indextail),
    Index is Indextail + 1.

foundindex([4,7,5,3,2], 3, Index).



foundMax([X], X).
foundMax([H | T],Max):-
    foundMax(T, Maxtail),
    ( H &gt;= Maxtail -&gt;   Max is H; Max is Maxtail  ).

foundMax([4,7,5,3,2],Max).


foundMin([X], X).
foundMin([H | T],Min):-
    foundMin(T, Mintail),
    ( H &lt; Mintail -&gt;   Min is H; Min is Mintail  ).

foundMin([4,7,5,3,2], Min).


reverselist([], []).
reverselist([H | T], Rev):-
    reverselist(T, Revtail),
    append(Revtail, [H], Rev).

palindrome(List):- reverselist(List, List).
reverselist([4,7,5,3,2], Rev).
palindrome([4,7,5,3,2]).
palindrome([4,7,5,7,4]).




appendlist([], L, L).
appendlist([H | T], L, [H | R]):-
    appendlist(T , L , R ).

appendlist([4, 5], [9, 4], Result).


factorial(0, 1).
factorial(N , F):-
    N &gt; 0,
    N1 is N - 1,
    factorial(N1 , F1),
    F is N * F1.

factorial(4, F).


fibonachi(0,0).
fibonachi(1,1).
fibonachi(N,F):-
    N &gt; 1,
    N1 is N -1,
    N2 is N -2,
    fibonachi(N1, F1),
    fibonachi(N2, F2),
    F is F1 + F2.

fibonachi(8, F).



multiply_lists([], [], []).
multiply_lists([H1|T1], [H2|T2], [R|RT]) :-
    R is H1 * H2,
    multiply_lists(T1, T2, RT).


multiply_lists([4,5,6], [1,2,3], RT).



% Gender facts
male(john).
male(peter).
male(michael).
male(david).
female(mary).
female(susan).
female(lisa).
female(emma).

% Parent facts
parent(john, mary).
parent(john, peter).
parent(mary, lisa).
parent(mary, david).
parent(peter, emma).
parent(susan, john).
parent(michael, john).

grandparent(A , B) :- parent(A , X), parent(X , B).
grandmother(A, B) :- grandparent(A , B), female(A).
sibilings(A, B) :- parent(X, A),parent(X ,B),A \= B.
aunty(A, B) :- parent(X, B), sibilings(A, X),female(A).


grandparent(A, mary).
grandmother(A, mary).
sibilings(A, mary).
aunty(A, mary).



information:-
    write("What is your name ?"),nl,
    read(Name),
    write("How old are you ?"),nl,
    read(Age),
    write("Hi "), write(Name),nl,
    Age &gt;= 18 -&gt;  
    	write("You are adult .");
    	write("You are not adult .").


information.



